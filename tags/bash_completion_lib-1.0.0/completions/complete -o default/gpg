# gpg(1) completion
#
_gpg()
{
    local cur prev

    COMPREPLY=()
    cur=`_get_cword`
    prev=${COMP_WORDS[COMP_CWORD-1]}

    case "$prev" in
    -@(s|-sign|-clearsign|-decrypt-files|-load-extension)) 
        _filedir
        return 0
        ;;
    --@(export|@(?(l|nr|nrl)sign|edit)-key)) 
        # return list of public keys
        COMPREPLY=( $( compgen -W "$( gpg --list-keys 2>/dev/null | sed -ne 's@^pub.*/\([^ ]*\).*\(<\([^>]*\)>\).*$@\1 \3@p')" -- "$cur" ))
        return 0
        ;;
    -@(r|-recipient))
        COMPREPLY=( $( compgen -W "$( gpg --list-keys 2>/dev/null | sed -ne 's@^pub.*<\([^>]*\)>.*$@\1@p')" -- "$cur" ))
        if [ -e ~/.gnupg/gpg.conf ]; then
            COMPREPLY=( ${COMPREPLY[@]} $( compgen -W "$( sed -ne 's@^[ \t]*group[ \t][ \t]*\([^=]*\).*$@\1@p' ~/.gnupg/gpg.conf  )" -- "$cur") )
        fi
        return 0
        ;;
    esac

    if [[ "$cur" == -* ]]; then
        COMPREPLY=( $( compgen -W '-s -b -e -f -c -d -a -r -u -Z -o -v\
                -q -n -N $(gpg --dump-options)' -- $cur ) )
     fi
} # _gpg()

comp_install  # Make completion persistent for subsequent invocations

_gpg  # Generate completions for first invocation
