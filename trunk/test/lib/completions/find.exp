proc setup {} {
}; # setup()


proc teardown {} {
}; # teardown()


setup


set test "Tab should show completions"
    # Try completion
set cmd "find "
send "$cmd\t"
expect {
    -re "$cmd\r\n.*$cmd$" { pass "$test" }
    -re /@ { unresolved "$test at prompt" }
    -re eof { unresolved "eof" }
}; # expect


sync_after_int


set options [list -amin -anewer -atime -cmin -cnewer -ctime -daystart -depth -empty -exec \
    -false -fls -follow -fprint -fprint0 -fprintf -fstype -gid -group -help -ilname -iname \
    -inum -ipath -iregex -iwholename -links -lname -ls -maxdepth -mindepth -mmin -mount \
    -mtime -name -newer -nogroup -noleaf -nouser -ok -perm -print -print0 -printf -prune \
    -regex -size -true -type -uid -used -user -version -wholename -xdev -xtype]
assert_complete $options {find -}


sync_after_int


set test "-wholename should complete files/dirs"
    # Change directory
set cmd "cd fixture1"
send "$cmd\r"
expect -ex "$cmd\r\n/fixture1/@"
    # Complete
set cmd "find -wholename "
send "$cmd\t"
expect {
    -re "$cmd\r\n(\.svn/ +|)bar +bar bar.d/ +foo +foo.d/ *(\.svn/ *|)\r\n/fixture1/@$cmd$" { 
	pass "$test" 
    }
    -re /@ { unresolved "$test at prompt" }
    -re eof { unresolved "eof" }
}; # expect


sync_after_int


    # Restore directory
set cmd "cd .."
send "$cmd\r"
expect -ex "$cmd\r\n/@"


set test "-uid should complete uids"
    # Complete
set cmd "find -uid "
send "$cmd\t"
expect {
    -re "$cmd\r\n\\d+.*/@$cmd$" { 
	pass "$test" 
    }
    -re /@ { unresolved "$test at prompt" }
    -re eof { unresolved "eof" }
}; # expect


sync_after_int


set test "-gid should complete gids"
    # Complete
set cmd "find -gid "
send "$cmd\t"
expect {
    -re "$cmd\r\n\\d+.*/@$cmd$" { 
	pass "$test" 
    }
    -re /@ { unresolved "$test at prompt" }
    -re eof { unresolved "eof" }
}; # expect


sync_after_int


teardown
